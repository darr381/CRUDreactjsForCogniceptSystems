{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darrence\\\\cogniceptWork\\\\cognicept_errorhandling_tool\\\\src\\\\DisplayError.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass DisplayError extends Component {\n  constructor(props) {\n    //any data passed to a class object is stored inside props , to receive it i need props in the constructor and super parameters\n    super(props);\n    console.log(this.props.first.first.first[0]);\n    this.state = {\n      first: this.props.first.first.first[0]\n    };\n  }\n\n  render() {\n    const error_code = this.state.first.error_code;\n    const error_type = this.state.first.error_type;\n    const error_description = this.state.first.error_description;\n    const robot_tags = this.state.first.robot_tags;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \" \", error_code), React.createElement(Text, {\n      style: styles.baseText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Text, {\n      style: styles.titleText,\n      onPress: this.onPressTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Error Code\"), React.createElement(Text, {\n      numberOfLines: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, error_code)));\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  baseText: {\n    fontFamily: 'Cochin'\n  },\n  titleText: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});\nexport default DisplayError;","map":{"version":3,"sources":["C:/Users/Darrence/cogniceptWork/cognicept_errorhandling_tool/src/DisplayError.js"],"names":["React","Component","DisplayError","constructor","props","console","log","first","state","render","error_code","error_type","error_description","robot_tags","styles","baseText","titleText","onPressTitle","StyleSheet","create","fontFamily","fontSize","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,kCAAP;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAoC;AAElCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAAE;AAClB,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,KAAX,CAAiBA,KAAjB,CAAuBA,KAAvB,CAA6B,CAA7B,CAAZ;AACA,SAAKC,KAAL,GAAW;AACTD,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAAX,CAAiBA,KAAjB,CAAuBA,KAAvB,CAA6B,CAA7B;AADE,KAAX;AAGD;;AAEDE,EAAAA,MAAM,GAAE;AACN,UAAMC,UAAU,GAAG,KAAKF,KAAL,CAAWD,KAAX,CAAiBG,UAApC;AACA,UAAMC,UAAU,GAAG,KAAKH,KAAL,CAAWD,KAAX,CAAiBI,UAApC;AACA,UAAMC,iBAAiB,GAAG,KAAKJ,KAAL,CAAWD,KAAX,CAAiBK,iBAA3C;AACA,UAAMC,UAAU,GAAG,KAAKL,KAAL,CAAWD,KAAX,CAAiBM,UAApC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAASH,UAAT,CADA,EAEA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAA+B,MAAA,OAAO,EAAE,KAAKC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,UADH,CAJF,CAFA,CADF;AAaD;;AA5BiC;;AA8BpC,MAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,QAAQ,EAAE;AACRK,IAAAA,UAAU,EAAE;AADJ,GADqB;AAI/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,UAAU,EAAE;AAFH;AAJoB,CAAlB,CAAf;AASA,eAAepB,YAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nclass DisplayError extends Component{\r\n\r\n  constructor(props){ //any data passed to a class object is stored inside props , to receive it i need props in the constructor and super parameters\r\n    super(props)\r\n    console.log(this.props.first.first.first[0])\r\n    this.state={\r\n      first: this.props.first.first.first[0]\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const error_code = this.state.first.error_code\r\n    const error_type = this.state.first.error_type\r\n    const error_description = this.state.first.error_description\r\n    const robot_tags = this.state.first.robot_tags\r\n    return (\r\n      <div>\r\n      <label> {error_code}</label>\r\n      <Text style={styles.baseText}>\r\n        <Text style={styles.titleText} onPress={this.onPressTitle}>\r\n          Error Code\r\n        </Text>\r\n        <Text numberOfLines={5}>\r\n          {error_code}\r\n        </Text>\r\n      </Text>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  baseText: {\r\n    fontFamily: 'Cochin',\r\n  },\r\n  titleText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\nexport default DisplayError\r\n"]},"metadata":{},"sourceType":"module"}
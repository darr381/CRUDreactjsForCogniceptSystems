{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darrence\\\\cogniceptWork\\\\cognicept_errorhandling_tool\\\\src\\\\DisplayError.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass DisplayError extends Component {\n  constructor(props) {\n    //any data passed to a class object is stored inside props , to receive it i need props in the constructor and super parameters\n    super(props);\n    this.state = {\n      first: this.props.first.first.first[0]\n    };\n  }\n\n  render() {\n    const error_code = this.state.first.error_code;\n    const error_type = this.state.first.error_type;\n    const error_description = this.state.first.error_description;\n    const robot_tags = this.state.first.robot_tags;\n    console.log(robot_tags);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row d-inline-flex p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \" Error Code : \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, error_code)), React.createElement(\"div\", {\n      className: \"row d-inline-flex p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" Error Type : \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, error_type)), React.createElement(\"div\", {\n      className: \"row d-inline-flex p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" Error Description : \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, error_description)), React.createElement(\"div\", {\n      className: \"row d-inline-flex p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" Robot Tags : \"), robot_tags.map(tags => {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"tags\");\n    })));\n  }\n\n}\n\nexport default DisplayError;","map":{"version":3,"sources":["C:/Users/Darrence/cogniceptWork/cognicept_errorhandling_tool/src/DisplayError.js"],"names":["React","Component","DisplayError","constructor","props","state","first","render","error_code","error_type","error_description","robot_tags","console","log","map","tags"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,kCAAP;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAoC;AAElCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAAE;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,CAAiBA,KAAjB,CAAuBA,KAAvB,CAA6B,CAA7B;AADE,KAAX;AAGD;;AAEDC,EAAAA,MAAM,GAAE;AACN,UAAMC,UAAU,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBE,UAApC;AACA,UAAMC,UAAU,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBG,UAApC;AACA,UAAMC,iBAAiB,GAAG,KAAKL,KAAL,CAAWC,KAAX,CAAiBI,iBAA3C;AACA,UAAMC,UAAU,GAAG,KAAKN,KAAL,CAAWC,KAAX,CAAiBK,UAApC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,UAAJ,CAFF,CADA,EAKA;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,UAAJ,CAFF,CALA,EASA;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,iBAAJ,CAFF,CATA,EAaA;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEKC,UAAU,CAACG,GAAX,CAAeC,IAAI,IAAI;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,KAFA,CAFL,CAbA,CADF;AAsBD;;AArCiC;;AAwCpC,eAAeb,YAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nclass DisplayError extends Component{\r\n\r\n  constructor(props){ //any data passed to a class object is stored inside props , to receive it i need props in the constructor and super parameters\r\n    super(props)\r\n    this.state={\r\n      first: this.props.first.first.first[0]\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const error_code = this.state.first.error_code\r\n    const error_type = this.state.first.error_type\r\n    const error_description = this.state.first.error_description\r\n    const robot_tags = this.state.first.robot_tags\r\n    console.log(robot_tags)\r\n    return (\r\n      <div>\r\n      <div className='row d-inline-flex p-2'>\r\n        <label> Error Code : </label>\r\n        <p>{error_code}</p>\r\n      </div>\r\n      <div className='row d-inline-flex p-2'>\r\n        <label> Error Type : </label>\r\n        <p>{error_type}</p>\r\n      </div>\r\n      <div className='row d-inline-flex p-2'>\r\n        <label> Error Description : </label>\r\n        <p>{error_description}</p>\r\n      </div>\r\n      <div className='row d-inline-flex p-2'>\r\n        <label> Robot Tags : </label>\r\n          {robot_tags.map(tags => {\r\n              return <p>tags</p>\r\n          })}\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DisplayError\r\n"]},"metadata":{},"sourceType":"module"}
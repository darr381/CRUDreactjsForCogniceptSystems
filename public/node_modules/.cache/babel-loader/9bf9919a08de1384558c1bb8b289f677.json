{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darrence\\\\cogniceptWork\\\\cognicept_errorhandling_tool\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Tabs from './components/Tabs';\nimport 'components/Tabs.css';\n\nclass App extends Component {\n  //function App() {\n  constructor() {\n    super();\n    this.state = {\n      title: 'CorErrorClassification',\n      first: []\n    };\n  }\n\n  showTable(event) {\n    event.preventDefault();\n    var request = new Request('http://localhost:3000/public/table_data', {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      })\n    });\n    fetch(request).then(response => response.json()).then(data => this.setState({\n      first: data\n    })); //data is the data returned from app.get after converting the response to json\n  }\n\n  addRow(event) {\n    event.preventDefault();\n    let data = {\n      s_num: this.refs.s_num.value,\n      error_type: this.refs.error_type.value,\n      error_code: this.refs.error_code.value,\n      error_description: this.refs.error_description.value,\n      robot_tags: this.refs.robot_tags.value,\n      resolution: this.refs.resolution.value\n    };\n    var request = new Request('http://localhost:3000/public/new_row', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(data)\n    }); //xmlHTTPrequest\n\n    fetch(request).then(function (response) {\n      response.json().then(function (data) {});\n    });\n  }\n\n  validate(s_num) {\n    if (s_num === parseInt(s_num, 10)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let first_array;\n    let title = this.state.title;\n    let first = this.state.first[0];\n    const isEnable = false;\n\n    if (first != null) {\n      isEnable = this.validate(this.refs.s_num.value);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" \", title, \" \"), React.createElement(\"form\", {\n      className: \"createForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"s_num\",\n      className: \"form-control\",\n      placeholder: \"S_NUM\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"error_type\",\n      className: \"form-control\",\n      placeholder: \"Error Type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"error_code\",\n      className: \"form-control\",\n      placeholder: \"Error Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      ref: \"error_description\",\n      className: \"form-control\",\n      placeholder: \"Error Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"robot_tags\",\n      className: \"form-control\",\n      placeholder: \"Robot Tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"resolution\",\n      className: \"form-control\",\n      placeholder: \"Resolution\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.addRow.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Add Row \")), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.showTable.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Show Database \"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" \", JSON.stringify(first)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Darrence/cogniceptWork/cognicept_errorhandling_tool/src/App.js"],"names":["React","Component","Tabs","App","constructor","state","title","first","showTable","event","preventDefault","request","Request","method","headers","Headers","fetch","then","response","json","data","setState","addRow","s_num","refs","value","error_type","error_code","error_description","robot_tags","resolution","body","JSON","stringify","validate","parseInt","render","first_array","isEnable","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Tabs from './components/Tabs';\nimport 'components/Tabs.css';\n\nclass App extends Component { //function App() {\n  constructor(){\n    super();\n    this.state = {\n      title: 'CorErrorClassification',\n      first: []\n    }\n  }\n  showTable(event){\n    event.preventDefault();\n    var request = new Request('http://localhost:3000/public/table_data', {\n      method: 'GET',\n      headers: new Headers({'Content-Type': 'application/json' , 'Accept': 'application/json'}),\n    });\n    fetch(request).then(response => response.json()).then(data => this.setState({first: data})); //data is the data returned from app.get after converting the response to json\n  }\n  addRow(event){\n    event.preventDefault();\n    let data = {\n      s_num: this.refs.s_num.value ,\n      error_type: this.refs.error_type.value,\n      error_code: this.refs.error_code.value,\n      error_description: this.refs.error_description.value,\n      robot_tags: this.refs.robot_tags.value,\n      resolution: this.refs.resolution.value\n    };\n    var request = new Request('http://localhost:3000/public/new_row', {\n      method: 'POST',\n      headers: new Headers({'Content-Type': 'application/json'}),\n      body: JSON.stringify(data)\n    });\n    //xmlHTTPrequest\n    fetch(request).then(function(response){\n      response.json().then(function(data){\n      });\n    });\n  }\n  validate(s_num){\n    if(s_num === parseInt(s_num,10)){\n      return true;\n    }\n    else {\n      return  false;\n    }\n  }\n\n  render() {\n    let first_array;\n    let title = this.state.title;\n    let first=  this.state.first[0];\n    const isEnable = false;\n    if(first != null){\n      isEnable = this.validate(this.refs.s_num.value);\n    }\n\n    return (\n      <div className='App'>\n      <h1> {title} </h1>\n      <form className = 'createForm'>\n\n      <div className=\"col-2\">\n      <input type='text' ref=\"s_num\" className= 'form-control' placeholder=\"S_NUM\"/><br/>\n      </div>\n      <div className=\"col-2\">\n      <input type='text' ref='error_type' className= 'form-control' placeholder=\"Error Type\"/><br/>\n      </div>\n      <div className=\"col-2\">\n      <input type='text' ref='error_code' className= 'form-control' placeholder=\"Error Code\"/><br/>\n      </div>\n      <div className=\"col-2\">\n      <textarea ref='error_description' className= 'form-control' placeholder=\"Error Description\"/><br/>\n      </div>\n      <div className=\"col-2\">\n      <input  type='text' ref='robot_tags' className= 'form-control' placeholder=\"Robot Tags\"/><br/>\n      </div>\n      <div className=\"col-2\">\n      <input type='text' ref='resolution' className= 'form-control' placeholder=\"Resolution\"/><br/>\n      </div>\n      <div className='col-2'>\n        <button onClick={this.addRow.bind(this)}>Add Row </button>\n      </div>\n      <div className='col-2'>\n      <button onClick={this.showTable.bind(this)}>Show Database </button>\n      </div>\n      </form>\n      <div> {JSON.stringify(first)}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}